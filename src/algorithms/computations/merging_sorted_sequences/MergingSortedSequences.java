package algorithms.computations.merging_sorted_sequences;

import java.util.Arrays;

/**
 * ------------------------------------------------------------------------------------------------
 * Слияние отсортированных последовательностей
 * ------------------------------------------------------------------------------------------------
 * Под слиянием отсортированных последовательностей подразумевают объединение
 * нескольких отсортированных последовательностей в одну отсортированную
 * последовательность.
 *
 * 1) Слияние может производиться для двух отдельных последовательностей.
 * 2) Слияние может производиться для двух отсортированных частей одной последовательностей.
 * ------------------------------------------------------------------------------------------------
 * Сведение об алгоритме
 *
 * Сложность по времени в наихудшем случае O(n+m)
 * Требует дополнительно памяти в размере суммы размеров объединяемых последовательностей.
 * ------------------------------------------------------------------------------------------------
 * Описание алгоритма
 *
 * 1) Создаем результирующую последовательность длинна которой равна сумме длин
 * объединяемых последовательностей. Создать две вспомогательных переменных для хранения
 * индексов (например l и r) присвоить им значение индексов первого элемента в первой и второй
 * объединяемых последовательностей соответственно.
 *
 * 2) Выполнить проход по результирующей последовательности. Для добавления элемента в
 * результирующую последовательность выполнить ряд проверок:
 *    2.1) Если значение индекса l больше длинны первой последовательности то добавить элемент
 *         стоящий на индексе r во второй последовательности. Увеличить значение r на единицу.
 *    2.2) Если значение индекса r больше длинны второй последовательности то добавить элемент
 *         стоящий на индексе l в первой последовательности. Увеличить значение l на единицу.
 *    2.3) Если элемент на индексе l меньше элемента на индексе r то добавить элемент стоящий на
 *         индексе l в первой последовательности. Увеличить значение l на единицу.
 *    2.4) Добавить элемент стоящий на индексе r во второй последовательности. Увеличить
 *         значение r на единицу.
 * ------------------------------------------------------------------------------------------------
 * <a href="https://youtu.be/RJkn1DXyH3U">Ссылка на видео</a>
 * ------------------------------------------------------------------------------------------------
 */
public class MergingSortedSequences {

    public static void main(String[] args) {
        int[] firstArray = { 1, 3, 6, 9 };
        int[] secondArray = { 2, 4, 4, 7 };

        int[] result = merge(firstArray, secondArray);
        System.out.println(Arrays.toString(result));
    }

    public static int[] merge(int[] firstArray, int[] secondArray) {
        int[] result = new int[firstArray.length + secondArray.length];
        int l = 0;
        int r = 0;
        for (int i = 0; i < result.length; i++) {
            if (l >= firstArray.length) {
                result[i] = secondArray[r];
                r++;
            } else if (r >= secondArray.length) {
                result[i] = firstArray[l];
                l++;
            } else if (firstArray[l] < secondArray[r]) {
                result[i] = firstArray[l];
                l++;
            } else {
                result[i] = secondArray[r];
                r++;
            }
        }
        return result;
    }
}
