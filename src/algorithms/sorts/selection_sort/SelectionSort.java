package algorithms.sorts.selection_sort;

import java.util.Arrays;

/**
 * ------------------------------------------------------------------------------------------------
 * Сортировка выбором
 * ------------------------------------------------------------------------------------------------
 * Сведение об алгоритме
 *
 * Сложность по времени в наихудшем случае O(n^2)
 * Затраты памяти O(n)
 * ------------------------------------------------------------------------------------------------
 * Принцип работы алгоритма
 *
 * 1) Выполняется проход по сортируемой последовательности.
 *
 * 2) Первый элемент не отсортированной подпоследовательности
 *    принимается за минимальный и сохраняется его индекс.
 *
 * 3) Выполняется проход по не отсортированной части последовательности в
 *    поиске минимального элемента.
 *
 * 4) Происходит обмен найденного минимального члена и первого члена не
 *    отсортированной подпоследовательности.
 * ------------------------------------------------------------------------------------------------
 * <a href="https://youtu.be/6xswgQZ1quU">Ссылка на видео</a>
 * ------------------------------------------------------------------------------------------------
 */
public class SelectionSort {

    public static void main(String[] args) {
        int[] array = { 5, 0, -2, 7, 3 };
    
        for (int i = 0; i < array.length - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < array.length; j++) {
                if (array[minIndex] > array[j]) {
                    minIndex = j;
                }
            }
            if (minIndex != i) {
                int temp = array[i];
                array[i] = array[minIndex];
                array[minIndex] = temp;
            }
        }
        System.out.println(Arrays.toString(array));
    }
}
